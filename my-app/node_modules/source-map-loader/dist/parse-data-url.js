"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = parseDataUrl;

var _abab = require("abab");

const removeLeadingAndTrailingHTTPWhitespace = string => string.replace(/^[ \t\n\r]+/, "").replace(/[ \t\n\r]+$/, "");

const removeTrailingHTTPWhitespace = string => string.replace(/[ \t\n\r]+$/, "");

const isHTTPWhitespaceChar = char => char === " " || char === "\t" || char === "\n" || char === "\r";

const solelyContainsHTTPTokenCodePoints = string => /^[-!#$%&'*+.^_`|~A-Za-z0-9]*$/.test(string);

const soleyContainsHTTPQuotedStringTokenCodePoints = string => /^[\t\u0020-\u007E\u0080-\u00FF]*$/.test(string);

const asciiLowercase = string => string.replace(/[A-Z]/g, l => l.toLowerCase());

const collectAnHTTPQuotedString = (input, position) => {
  let value = ""; // eslint-disable-next-line no-param-reassign

  position += 1; // eslint-disable-next-line no-constant-condition

  while (true) {
    while (position < input.length && input[position] !== '"' && input[position] !== "\\") {
      value += input[position]; // eslint-disable-next-line no-param-reassign

      position += 1;
    }

    if (position >= input.length) {
      break;
    }

    const quoteOrBackslash = input[position]; // eslint-disable-next-line no-param-reassign

    position += 1;

    if (quoteOrBackslash === "\\") {
      if (position >= input.length) {
        value += "\\";
        break;
      }

      value += input[position]; // eslint-disable-next-line no-param-reassign

      position 